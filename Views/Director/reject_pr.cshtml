
@{
    ViewBag.Title = "reject_pr";
    Layout = "~/Views/Shared/Director_Layout.cshtml";
}


<div class="my_form">

    <div id='wrap'>

        <h1 title='how forms should be done.'>Rejection Form</h1>
        <section class='form'>
            <form action="" method="post" novalidate>
                <fieldset>

                    <div class="item">
                        <label>
                            <span>Please Leave comment for Rejecting</span>
                            <br>
                            <textarea required="required" name='message'></textarea>
                        </label>
                    </div>
                </fieldset>
                <fieldset>
                    <input name="somethingHidden" required="required" type="text" style='display:none' />
                </fieldset>
                <button id='send' type='submit'>Submit</button>
            </form>
        </section>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="http://dropthebit.com/demos/validator/multifield.js"></script>
<script src="http://dropthebit.com/demos/validator/validator.js"></script>
<script>
    // initialize the validator function
    validator.message['date'] = 'not a real date';

    // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
    $('form')
        .on('blur', 'input[required], input.optional, select.required', validator.checkField)
        .on('change', 'select.required', validator.checkField);

    $('.multi.required')
        .on('keyup', 'input', function () {
            validator.checkField.apply($(this).siblings().last()[0]);
        }).on('blur', 'input', function () {
            validator.checkField.apply($(this).siblings().last()[0]);
        });

    // bind the validation to the form submit event
    //$('#send').click('submit');//.prop('disabled', true);

    $('form').submit(function (e) {
        e.preventDefault();
        var submit = true;
        // evaluate the form using generic validaing
        if (!validator.checkAll($(this))) {
            submit = false;
        }

        if (submit)
            this.submit();
        return false;
    });

    /* FOR DEMO ONLY */
    $('#vfields').change(function () {
        $('form').toggleClass('mode2');
    }).prop('checked', false);

    $('#alerts').change(function () {
        validator.defaults.alerts = (this.checked) ? false : true;
        if (this.checked)
            $('form .alert').remove();
    }).prop('checked', false);
</script>